auth:
  # General authentication settings
  secret_key: "your-secure-secret-key"  # Change this in production!
  token_expiry: 3600  # 1 hour
  refresh_token_expiry: 604800  # 7 days
  max_failed_attempts: 5
  lockout_duration: 300  # 5 minutes

  # Password policy settings
  password_policy:
    min_length: 12
    require_uppercase: true
    require_lowercase: true
    require_numbers: true
    require_special: true
    max_age_days: 90
    history_size: 5  # Number of previous passwords to remember

  # Google OAuth configuration
  google:
    client_id: "your-google-client-id"
    client_secret: "your-google-client-secret"
    redirect_uri: "http://localhost:8000/auth/google/callback"
    scope: "openid email profile"

  # GitHub OAuth configuration
  github:
    client_id: "your-github-client-id"
    client_secret: "your-github-client-secret"
    redirect_uri: "http://localhost:8000/auth/github/callback"
    scope: "read:user user:email"

  # Microsoft Entra ID configuration
  entra:
    client_id: "your-app-client-id"
    client_secret: "your-client-secret"
    tenant_id: "your-tenant-id"
    redirect_uri: "http://localhost:8000/auth/entra/callback"
    scope: "openid email profile User.Read"

  # Certificate-based authentication configuration
  certificate:
    ca_cert_path: "/path/to/ca.crt"
    verify_crl: true
    crl_path: "/path/to/crl.pem"
    allowed_subjects:
      - "O=YourOrg"
      - "OU=Agents"

logging:
  level: DEBUG
  file: logs/security.log

policies:
  policies:
    - name: "deny_system_messages"
      conditions:
        action_type: "send_message"
        message.type: {"regex": "^system$"}
      effect: "deny"
      priority: 200

    - name: "allow_autogen_communication"
      conditions:
        action_type: "send_message"
        source_agent: {"regex": "^(assistant|user).*"}
        target_agent: {"regex": "^(assistant|user).*"}
        message.type: {"regex": "^(text|function_call)$"}
        framework: "autogen"
      effect: "allow"
      priority: 100

    - name: "allow_research_agents"
      conditions:
        agent_id: {"regex": "^research_.*"}
        action_type: {"in": ["execute_task", "research"]}
      effect: "allow"
      priority: 90

    - name: "allow_analyst_tasks"
      conditions:
        agent_id: {"regex": "^analyst_.*"}
        action_type: {"in": ["execute_task", "analyze"]}
      effect: "allow"
      priority: 80

    - name: "allow_agent_communication"
      conditions:
        action_type: "send_message"
        framework: "crewai"
      effect: "allow"
      priority: 70

    - name: "allow_basic_tasks"
      conditions:
        action_type: "execute_task"
        resource.type: {"in": ["read", "process", "research", "analyze"]}
      effect: "allow"
      priority: 60

    - name: "default_deny"
      conditions: {}
      effect: "deny"
      priority: 0

# Security monitoring configuration
monitoring:
  # GeoIP and threat intelligence
  geoip_db_path: "/path/to/GeoLite2-City.mmdb"
  threat_intel_api_key: "your-abuseipdb-api-key"
  
  # Rate limiting configurations
  rate_limits:
    auth:
      window: 3600  # 1 hour
      max_requests: 100
    api:
      window: 60  # 1 minute
      max_requests: 30

  # Alert thresholds for different event types
  alert_thresholds:
    authentication_failure: 10  # Alert after 10 failures
    suspicious_activity: 5
    policy_violation: 3
    token_revocation: 5
    certificate_error: 3

  # IP management
  max_auth_failures: 5  # Number of failures before marking IP as suspicious
  ip_blacklist:
    - "10.0.0.0/8"  # Example blocked network
    - "192.168.1.100"  # Example blocked IP
  ip_whitelist:
    - "192.168.1.0/24"  # Example trusted network
    - "10.10.10.10"  # Example trusted IP

  # Suspicious activity detection
  suspicious_patterns:
    - pattern: "SQL injection attempt"
      severity: "critical"
    - pattern: "XSS attempt"
      severity: "critical"
    - pattern: "Directory traversal"
      severity: "critical"
    - pattern: "Brute force attempt"
      severity: "high"

  # Alert notifications
  notifications:
    email:
      enabled: true
      smtp_server: "smtp.example.com"
      smtp_port: 587
      smtp_user: "security@example.com"
      smtp_password: "your-smtp-password"
      recipients:
        - "security-team@example.com"
        - "admin@example.com"
    slack:
      enabled: true
      webhook_url: "https://hooks.slack.com/services/your/webhook/url"
      channel: "#security-alerts"

  # Metrics and reporting
  metrics:
    enabled: true
    collection_interval: 300  # 5 minutes
    retention_days: 30
    export_format: "json"
    export_path: "logs/security_metrics/"

  # Response actions
  automated_responses:
    enabled: true
    actions:
      excessive_auth_failures:
        - action: "block_ip"
          duration: 3600  # 1 hour
        - action: "notify_admin"
      high_threat_score:
        - action: "block_ip"
          duration: 86400  # 24 hours
        - action: "notify_admin"
      policy_violation:
        - action: "revoke_tokens"
        - action: "notify_admin"

  # Session monitoring
  session_tracking:
    enabled: true
    max_concurrent_sessions: 5
    session_timeout: 3600  # 1 hour
    track_location_changes: true
    track_user_agent_changes: true