name: CI Workflow

on:
  push:
    branches:
      - main
      # Potentially 'develop' or other integration branches if used
  pull_request:
    branches:
      - main
      # Potentially 'develop'
  # Optional: Allow manual triggering
  # workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11'] # Matches pyproject.toml and setup.py python_requires

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: pip install uv

      # Install all dependencies defined in pyproject.toml (which currently includes pytest, pytest-cov)
      # and also install ruff for linting.
      - name: Install dependencies
        run: |
          uv pip install . --system # Installs package and its deps from pyproject.toml
          uv pip install ruff build --system # Install ruff for linting and build for packaging

      - name: Run linter (Ruff)
        run: ruff check .

      - name: Run tests (pytest)
        run: pytest

      - name: Build package
        run: python -m build

      - name: Upload package distributions
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-pypi:
    name: Publish to PyPI (Placeholder)
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v') # Condition to run only on version tags
    needs: build-and-test # Ensures build-and-test job completes successfully first
    
    steps:
      - name: Display information
        run: echo "This job would publish the package to PyPI. It runs only on version tags."

      # - name: Checkout code
      #   uses: actions/checkout@v4

      # - name: Set up Python
      #   uses: actions/setup-python@v5
      #   with:
      #     python-version: '3.11'

      # - name: Download built distributions
      # - name: Download built distributions
      #   uses: actions/download-artifact@v4 # Updated to v4
      #   with:
      #     name: python-package-distributions # Must match the upload name
      #     path: dist/ # Download to dist/ directory
      
      # - name: Publish package to PyPI
      #   uses: pypa/gh-action-pypi-publish@release/v1
      #   with:
      #     # For API token auth (less preferred):
      #     # user: __token__
      #     # password: ${{ secrets.PYPI_API_TOKEN }}
      #     # For OIDC Trusted Publishing (preferred):
      #     # Attestations can be generated here as well if needed.
      #     # The action will automatically find packages in dist/
      #     # Make sure your PyPI project is configured for trusted publishing.
      #     # publish_options: --verbose # Optional: for more detailed output
      #     # job_name_in_report: true # Optional: for better traceability in PyPI
      #     pass # Actual publishing is still placeholder
